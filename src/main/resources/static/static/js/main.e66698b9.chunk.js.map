{"version":3,"sources":["Register.js","StatusMessage.js","ListUsers.js","Narnia.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","width","dense","marginTop","menu","Register","props","classes","_useState","useState","firstName","lastName","age","city","id","person","_useState2","Object","slicedToArray","values","setValues","handleChange","name","event","objectSpread","defineProperty","target","value","react_default","a","createElement","Fragment","className","noValidate","autoComplete","TextField","label","onChange","margin","required","Button","variant","color","type","onClick","validateFields","error","register","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","useStyles1","backgroundColor","green","palette","dark","primary","main","amber","icon","fontSize","iconVariant","opacity","message","alignItems","MySnackbarContentWrapper","onClose","other","objectWithoutProperties","Icon","SnackbarContent","assign","clsx","aria-describedby","action","IconButton","key","aria-label","Close_default","ListUsers","people","List","component","map","tourist","ListItem","Paper","style","Typography","textAlign","selectUser","removeUser","appBar","position","title","flex","Transition","React","forwardRef","ref","Slide","direction","Narnia","_React$useState","_React$useState2","open","setOpen","handleClose","Dialog","fullScreen","TransitionComponent","AppBar","Toolbar","edge","src","enterNarnia","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","fetchData","fetchRegistrations","fetchTourists","asyncToGenerator","regenerator_default","mark","_callee","result","wrap","_context","prev","next","axios","get","sent","setState","registered","data","t0","stop","_callee2","_context2","console","log","tourists","response","_ref3","_callee3","_context3","post","_x","apply","arguments","registerPerson","_ref4","_callee4","body","cleanPerson","_context4","registration","_x2","errorSwitch","closeMessage","_ref5","_callee5","_context5","delete","concat","_x3","state","_this2","Container","Grid","justify","item","xs","StatusMessage","src_Register","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","unregister"],"mappings":"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","file":"static/js/main.e66698b9.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { validate } from \"@babel/types\";\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200\r\n  },\r\n  dense: {\r\n    marginTop: 19\r\n  },\r\n  menu: {\r\n    width: 200\r\n  }\r\n}));\r\n\r\nconst validateFields = values => {\r\n  const { firstName, lastName, age, city } = values;\r\n  if (firstName !== \"\" && lastName !== \"\" && age > 0 && city !== \"\") {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\nconst Register = props => {\r\n  const classes = useStyles();\r\n\r\n  const [values, setValues] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    age: 0,\r\n    city: \"\",\r\n    id: props.person.id\r\n  });\r\n  const handleChange = name => event => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n  return (\r\n    <>\r\n      <form className={classes.container} noValidate autoComplete=\"off\">\r\n        <TextField\r\n          id=\"standard-name\"\r\n          label=\"First name\"\r\n          className={classes.textField}\r\n          value={values.firstName}\r\n          onChange={handleChange(\"firstName\")}\r\n          margin=\"normal\"\r\n          required\r\n        />\r\n        <TextField\r\n          id=\"last-name\"\r\n          label=\"Last name\"\r\n          className={classes.textField}\r\n          value={values.lastName}\r\n          onChange={handleChange(\"lastName\")}\r\n          margin=\"normal\"\r\n          required\r\n        />\r\n        <TextField\r\n          id=\"age\"\r\n          label=\"Age\"\r\n          className={classes.textField}\r\n          value={values.age}\r\n          onChange={handleChange(\"age\")}\r\n          margin=\"normal\"\r\n          required\r\n        />\r\n        <TextField\r\n          id=\"age\"\r\n          label=\"City\"\r\n          className={classes.textField}\r\n          value={values.city}\r\n          onChange={handleChange(\"city\")}\r\n          margin=\"normal\"\r\n          required\r\n        />\r\n      </form>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        type=\"submit\"\r\n        onClick={() => {\r\n          if (validateFields(values)) {\r\n            props.register(values);\r\n          } else {\r\n            props.error(\"Please fill out all fields\");\r\n          }\r\n        }}\r\n      >\r\n        Submit registration\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\nexport default Register;\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { amber, green } from \"@material-ui/core/colors\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\r\nimport WarningIcon from \"@material-ui/icons/Warning\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon\r\n};\r\nconst useStyles1 = makeStyles(theme => ({\r\n  success: {\r\n    backgroundColor: green[600]\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.primary.main\r\n  },\r\n  warning: {\r\n    backgroundColor: amber[700]\r\n  },\r\n  icon: {\r\n    fontSize: 20\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  message: {\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  }\r\n}));\r\nfunction MySnackbarContentWrapper(props) {\r\n  const classes = useStyles1();\r\n  const { className, message, onClose, variant, ...other } = props;\r\n  const Icon = variantIcon[variant];\r\n\r\n  return (\r\n    <SnackbarContent\r\n      className={clsx(classes[variant], className)}\r\n      aria-describedby=\"client-snackbar\"\r\n      message={\r\n        <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n          {message}\r\n        </span>\r\n      }\r\n      action={[\r\n        <IconButton\r\n          key=\"close\"\r\n          aria-label=\"close\"\r\n          color=\"inherit\"\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon className={classes.icon} />\r\n        </IconButton>\r\n      ]}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\nexport default MySnackbarContentWrapper;\r\n","import React from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default function ListUsers(props) {\r\n  const { people } = props;\r\n  return (\r\n    <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n      {people\r\n        ? people.map(tourist => {\r\n            return (\r\n              <ListItem key={tourist.id}>\r\n                <Paper style={{ width: \"300px\" }}>\r\n                  <Typography variant=\"h5\" component=\"h3\">\r\n                    Name: {tourist.firstName} {tourist.lastName}\r\n                  </Typography>\r\n                  <Typography component=\"p\">\r\n                    Age: {tourist.age} from {tourist.city}\r\n                  </Typography>\r\n                  <div style={{ textAlign: \"center\" }}>\r\n                    {props.selectUser ? (\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={() => props.selectUser(tourist)}\r\n                      >\r\n                        Select {tourist.firstName}\r\n                      </Button>\r\n                    ) : null}\r\n                    {props.removeUser ? (\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        onClick={() => props.removeUser(tourist)}\r\n                      >\r\n                        Leave Narnia :(\r\n                      </Button>\r\n                    ) : null}\r\n                  </div>\r\n                </Paper>\r\n              </ListItem>\r\n            );\r\n          })\r\n        : null}\r\n    </List>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appBar: {\r\n    position: \"relative\"\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1\r\n  }\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Narnia(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  function handleClickOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {props.person.firstName ? (\r\n        <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n          Enter narnia with {props.person.firstName}\r\n        </Button>\r\n      ) : (\r\n        <div>Please select a tourist</div>\r\n      )}\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Typography variant=\"h3\" className={classes.title}>\r\n          Welcome to the door of Narnia {props.person.firstName}\r\n        </Typography>\r\n        <div>\r\n          <img src=\"narnia.jpg\" style={{ width: \"100%\" }} />\r\n        </div>\r\n        <Typography variant=\"h6\" className={classes.title}>\r\n          If you want to try and enter, please click the enter button, else\r\n          click the X to go back\r\n        </Typography>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={() => {\r\n            props.enterNarnia(props.person);\r\n            handleClose();\r\n          }}\r\n        >\r\n          I wish to enter Narnia!!\r\n        </Button>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Container from \"@material-ui/core/Container\";\nimport Button from \"@material-ui/core/Button\";\nimport axios from \"axios\";\nimport Register from \"./Register\";\nimport MySnackbarContentWrapper from \"./StatusMessage\";\nimport ListUsers from \"./ListUsers\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Narnia from \"./Narnia\";\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      person: {\n        firstName: \"\",\n        lastName: \"\",\n        id: null,\n        age: 0,\n        error: false,\n        message: \"\",\n        tourists: [],\n        registered: []\n      }\n    };\n  }\n  componentDidMount() {\n    this.fetchData();\n  }\n  fetchData = () => {\n    this.fetchRegistrations();\n    this.fetchTourists();\n  };\n  fetchRegistrations = async () => {\n    try {\n      const result = await axios.get(\"/api/tourists/registered\");\n      this.setState({ registered: result.data });\n    } catch (error) {\n      // this.setState({ message: error.response.data.message, error: true });\n    }\n  };\n  fetchTourists = async () => {\n    try {\n      const result = await axios.get(\"/api/tourists/inside\");\n      console.log(result);\n      this.setState({ tourists: result.data });\n    } catch (error) {\n      this.setState({ message: error.response.data.message, error: true });\n    }\n  };\n\n  enterNarnia = async person => {\n    try {\n      await axios.post(\"/api/tourists/add\", person);\n      this.fetchData();\n    } catch (error) {\n      console.log(error.response.data);\n      this.setState({ message: error.response.data.message, error: true });\n    }\n  };\n  registerPerson = async body => {\n    try {\n      await axios.post(\"/api/tourists/register\", body);\n      this.fetchRegistrations();\n      const cleanPerson = {\n        firstName: \"\",\n        lastName: \"\",\n        id: null,\n        age: 0\n      };\n      this.setState({ registration: false, person: cleanPerson });\n    } catch (error) {\n      console.log(error);\n      this.setState({ message: error.response.data.message, error: true });\n    }\n  };\n  selectUser = person => {\n    this.setState({ person });\n  };\n  errorSwitch = message => {\n    this.setState({ error: true, message });\n  };\n  closeMessage = () => {\n    this.setState({ error: false, message: \"\" });\n  };\n  removeUser = async person => {\n    try {\n      await axios.delete(`/api/tourists/${person.id}`);\n      this.fetchData();\n    } catch (error) {\n      console.log(error.response.data);\n      this.setState({ message: error.response.data.message, error: true });\n    }\n  };\n  render() {\n    return (\n      <Container>\n        <Grid\n          container\n          spacing={3}\n          direction=\"row\"\n          justify=\"center\"\n          // alignItems=\"center\"\n        >\n          <Grid item xs={12} style={{ textAlign: \"center\" }}>\n            <img src=\"download.jpg\" />\n            {this.state.error ? (\n              <MySnackbarContentWrapper\n                variant=\"error\"\n                message={this.state.message}\n                onClose={this.closeMessage}\n              />\n            ) : null}\n          </Grid>\n          <Grid item xs={12} style={{ textAlign: \"center\" }}>\n            Currently selected: {this.state.person.firstName}\n            <Narnia person={this.state.person} enterNarnia={this.enterNarnia} />\n          </Grid>\n\n          <Grid item xs={6} className=\"uglyGrid\">\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() =>\n                this.setState({ registration: !this.state.registration })\n              }\n            >\n              Register new tourist\n            </Button>\n            {this.state.registration ? (\n              <Register\n                person={this.state.person}\n                register={this.registerPerson}\n                error={this.errorSwitch}\n              />\n            ) : null}\n            <h3> People registered for Narnia:</h3>\n            <ListUsers\n              people={this.state.registered}\n              selectUser={this.selectUser}\n            />\n          </Grid>\n          <Grid item xs={6} className=\"anotherUglyGrid\">\n            <h3>People currently in Narnia: </h3>\n            <ListUsers\n              people={this.state.tourists}\n              removeUser={this.removeUser}\n            />\n          </Grid>\n        </Grid>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}